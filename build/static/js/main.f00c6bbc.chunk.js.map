{"version":3,"sources":["firebase/firebase.js","actions/projects.js","components/ProjectListItem.js","components/ProjectList.js","components/ProjectDashboardPage.js","components/ProjectListItem-admin.js","components/ProjectList-admin.js","components/ProjectDashboardPage-admin.js","components/ProjectForm.js","components/AddProjectPage.js","components/EditProjectPage.js","components/NotFoundPage.js","components/ImageElement.js","components/ViewProjectPage.js","components/AboutPage.js","components/Header.js","components/Header-admin.js","routers/AppRouter.js","reducers/projects.js","store/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","storage","addProject","project","type","removeProject","id","editProject","updates","startEditProject","imgUpdated","dispatch","uuid","imageStorageRefs","ref","child","once","then","snapshot","val","imgStorages","remove","forEach","uri","delete","catch","e","refs","storageRefs","count","i","imgStoreLazyRef","put","images","getDownloadURL","push","update","Array","from","length","toString","concat","setProjects","projects","withRouter","connect","description","title","history","className","onClick","to","substring","src","placeholder","loading","style","opacity","alt","state","props","map","key","ProjectDashboardPage","stopPropagation","startRemoveProject","ProjectDashboardPageAdmin","ProjectForm","onTitleChange","target","value","setState","onDescriptionChange","onImageChange","files","onSubmit","preventDefault","buttonTxt","this","encType","autoFocus","onChange","rows","multiple","React","Component","projectData","imageId","startAddProject","find","match","params","console","log","NotFoundPage","ImageElement","img","height","width","newStyle","maxWidth","image","ImgWrapper","styled","div","H3Wrapper","h3","PWrapper","p","LabelWrapper","CenterText","DivWrapper","AboutPage","href","email","headers","subject","Header","password","prompt","signInWithEmailAndPassword","error","errorCode","code","errorMessage","message","alert","onAuthStateChanged","user","window","location","reload","activeClassName","exact","HeaderAdmin","signOut","AppRouter","auth","currentUser","path","component","AddProjectPage","ViewProjectPage","EditProjectPage","projectsReducerDefaultState","projectsReducer","action","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","getState","ReactDOM","render","document","getElementById","childSnapshot","startSetProjects","Boolean","hostname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f00c6bbc.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n\r\n// Initialize Firebase\r\nconst config = {\r\n    apiKey: \"AIzaSyDVfK4qlkVL4J8CA94TFdh9DhXFihR-IZg\",\r\n    authDomain: \"portfolio-app-1111f.firebaseapp.com\",\r\n    databaseURL: \"https://portfolio-app-1111f.firebaseio.com\",\r\n    projectId: \"portfolio-app-1111f\",\r\n    storageBucket: \"portfolio-app-1111f.appspot.com\",\r\n    messagingSenderId: \"398516534755\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst database = firebase.database();\r\n\r\nconst storage = firebase.storage();\r\n\r\nconst auth = firebase.auth();\r\n\r\nexport const getCurrentUser = () =>{\r\n    return firebase.auth().currentUser.email;    \r\n}\r\n\r\nexport { storage, firebase, auth, database as default };\r\n\r\n// //child_removed subscriber\r\n// database.ref('projects').on('child_removed', (snapshot) => {\r\n//     console.log(snapshot.key, snapshot.val());\r\n// });\r\n\r\n// //child_changed subscriber\r\n// database.ref('projects').on('child_changed', (snapshot) => {\r\n//     console.log(snapshot.key, snapshot.val());\r\n// });\r\n\r\n// //child_added subscriber\r\n// database.ref('projects').on('child_added', (snapshot) => {\r\n//     console.log(snapshot.key, snapshot.val());\r\n// });\r\n\r\n// database.ref('projects').push({\r\n//     title: \"Project 1\",\r\n//     description: \"This is the first project\",\r\n// });\r\n\r\n// database.ref('projects').push({\r\n//     title: \"Project 2\",\r\n//     description: \"This is the second project\",\r\n// });\r\n\r\n// database.ref('projects').on('value', (snapshot) => {\r\n//     const projects = [];\r\n\r\n//     snapshot.forEach((childSnapshot) => {\r\n//         projects.push({\r\n//             id: childSnapshot.key,\r\n//             ...childSnapshot.val()\r\n//         });\r\n//     });\r\n// });","import uuid from 'uuid';\r\nimport database from '../firebase/firebase';\r\nimport { storage } from '../firebase/firebase';\r\n\r\n//action generators for projects\r\n\r\n//ADD_PROJECT - action\r\nexport const addProject = (project) => {\r\n    //console.log(\"add project:\",project);\r\n    return {\r\n        type: 'ADD_PROJECT',\r\n        project\r\n    };\r\n};\r\n    \r\n\r\nexport const startAddProject = (projectData = {}) => {\r\n    return (dispatch) => {\r\n        const {\r\n            description = '',\r\n            title = '',\r\n            images\r\n        } = projectData;\r\n\r\n        const project = { \r\n            title,\r\n            description,\r\n            images\r\n        };\r\n\r\n        //console.log(project.images);\r\n\r\n        const imageId = uuid();\r\n\r\n        const refs = [];\r\n        const storageRefs = [];\r\n\r\n        let count = 0;\r\n\r\n        //\r\n\r\n        for(let i=0;i<project.images.length;i++){\r\n            (function(imgStoreLazyRef){\r\n                const upload = storage.ref('images').child(imgStoreLazyRef).put(project.images[i]).then( snapshot => {\r\n                    var downloadURL = storage.ref('images').child(imgStoreLazyRef).getDownloadURL().then( ref => {\r\n                        refs.push(ref);\r\n                        count++;\r\n                        database.ref('projects').child(imageId).update(\r\n                            {\r\n                                id: imageId,\r\n                                ...project,\r\n                                images: refs,\r\n                            }\r\n                        ).then(()=>{\r\n                            if(count === Array.from(project.images).length){\r\n                                //console.log(\"DISPATCHED: \", refs);\r\n                                dispatch(addProject({\r\n                                    id: imageId,\r\n                                    ...project,\r\n                                    images: refs,\r\n                                }));\r\n                            } \r\n                        });\r\n                    });\r\n                });\r\n                storageRefs.push(imgStoreLazyRef);\r\n\r\n                database.ref('projects').child(imageId).update(\r\n                    {\r\n                        imgStorages: storageRefs\r\n                    });\r\n            })(imageId.toString().concat(\"/\"+(uuid().toString())))\r\n        }\r\n/*\r\n            upload.on('state_changed', (snapshot)=>(null), (error)=>(console.log(error)), () => {\r\n                imgStore.getDownloadURL().then((ref) =>{\r\n                    refs.push(ref);\r\n                    console.log(\"NOWTHIS: \", ref);\r\n                    count++;\r\n                    database.ref('projects').child(imageId).update(\r\n                        {\r\n                            id: imageId,\r\n                            ...project,\r\n                            images: refs\r\n                        }\r\n                    ).then(()=>{\r\n                        if(count === Array.from(project.images).length){\r\n                            console.log(\"DISPATCHED: \", refs);\r\n                            dispatch(addProject({\r\n                                id: imageId,\r\n                                ...project,\r\n                                images: refs\r\n                            }));\r\n                        } \r\n                    });\r\n                });\r\n            });\r\n        } */\r\n\r\n        //console.log(\"NOWTHIS\", refs);\r\n        \r\n\r\n        //\r\n        /*\r\n        Array.from(project.images).forEach(img => {\r\n            imgStore = storage.ref('images').child(imageId.toString()).child(uuid().toString());\r\n            uploading = imgStore.put(img);\r\n\r\n            uploading.on('state_changed', (snapshot)=>(null), (error)=>(console.log(error)), () => {\r\n                imgStore.getDownloadURL().then((ref) =>{\r\n                    refs.push(ref);\r\n                    console.log(\"refs: \", refs);\r\n                    count++;\r\n                    database.ref('projects').child(imageId).update(\r\n                        {\r\n                            id: imageId,\r\n                            ...project,\r\n                            images: refs\r\n                        }\r\n                    ).then(()=>{\r\n                        if(count === Array.from(project.images).length){\r\n                            console.log(\"DISPATCHED: \", refs);\r\n                            dispatch(addProject({\r\n                                id: imageId,\r\n                                ...project,\r\n                                images: refs\r\n                            }));\r\n                        } \r\n                    });\r\n                });\r\n            });\r\n        }); */\r\n    };\r\n};\r\n\r\n//REMOVE_PROJECT\r\n\r\nexport const removeProject = ({ id } = {}) => ({\r\n    type: 'REMOVE_PROJECT',\r\n    id\r\n});\r\n\r\nexport const startRemoveProject = ({ id } = {}) => {\r\n    return (dispatch) => {\r\n        let imageStorageRefs = [];\r\n        database.ref('projects').child(id).once('value').then((snapshot)=>{\r\n\r\n            imageStorageRefs = snapshot.val().imgStorages;\r\n            //console.log(imageStorageRefs);\r\n\r\n            return database.ref('projects').child(id).remove().then(() => {\r\n                imageStorageRefs.forEach((uri)=>{\r\n                    //console.log(\"URI: \",uri);\r\n                    storage.ref('images').child(uri).delete().then(()=>{\r\n                        //console.log(\"image deleted successfully\");\r\n                    }).catch((e)=>{\r\n                        //console.log(\"image deletion failed with\", e);\r\n                    });\r\n                });\r\n                \r\n                dispatch(removeProject({id}));\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\n//EDIT_EXPENSE\r\n\r\nexport const editProject = (id, updates) => ({\r\n    type: 'EDIT_PROJECT',\r\n    id,\r\n    updates\r\n});\r\n\r\nexport const startEditProject = (id, updates, imgUpdated) => {\r\n    return (dispatch) => {\r\n        const imageId = uuid();\r\n        //console.log(\"EDIT UPDATES\", updates);\r\n\r\n        if(imgUpdated){\r\n            //console.log(\"IMGUPDATED\");\r\n            let imageStorageRefs = [];\r\n            database.ref('projects').child(id).once('value').then((snapshot)=>{\r\n    \r\n                imageStorageRefs = snapshot.val().imgStorages;\r\n                //console.log(\"IMGSTORAGEREFS\", imageStorageRefs);\r\n    \r\n                return database.ref('projects').child(id).remove().then(() => {\r\n                    imageStorageRefs.forEach((uri)=>{\r\n                        //console.log(\"URI: \",uri);\r\n                        storage.ref('images').child(uri).delete().then(()=>{\r\n                            //console.log(\"image deleted successfully\");\r\n                        }).catch((e)=>{\r\n                            //console.log(\"image deletion failed with\", e);\r\n                        });\r\n                    });\r\n\r\n                    const refs = [];\r\n                    const storageRefs = [];\r\n    \r\n                    let count = 0;\r\n    \r\n                    //\r\n    \r\n                    for(let i=0;i<updates.images.length;i++){\r\n                        (function(imgStoreLazyRef){\r\n                            const upload = storage.ref('images').child(imgStoreLazyRef).put(updates.images[i]).then( snapshot => {\r\n                                var downloadURL = storage.ref('images').child(imgStoreLazyRef).getDownloadURL().then( ref => {\r\n                                    refs.push(ref);\r\n                                    count++;\r\n                                    database.ref('projects').child(id).update(\r\n                                        {\r\n                                            id: id,\r\n                                            ...updates,\r\n                                            images: refs,\r\n                                        }\r\n                                    ).then(()=>{\r\n                                        if(count === Array.from(updates.images).length){\r\n                                            //console.log(\"DISPATCHED: \", refs);\r\n                                            dispatch(editProject(id, {\r\n                                                id: id,\r\n                                                ...updates,\r\n                                                images: refs\r\n                                            }));\r\n                                        } \r\n                                    });\r\n                                });\r\n                            });\r\n                            storageRefs.push(imgStoreLazyRef);\r\n    \r\n                            database.ref('projects').child(id).update(\r\n                                {\r\n                                    imgStorages: storageRefs\r\n                                });\r\n                        })(id.toString().concat(\"/\"+(uuid().toString())))\r\n                    }\r\n\r\n                });\r\n            });\r\n            \r\n        }\r\n        else{\r\n            dispatch(editProject(id, {\r\n                id: id,\r\n                ...updates,\r\n            }));\r\n            database.ref('projects').child(id).update({\r\n                id: id,\r\n                ...updates,\r\n            });\r\n        }\r\n\r\n\r\n        /*\r\n        old edit code in dispatch\r\n        return database.ref('projects').child(id).update(updates).then(() => {\r\n            dispatch(editProject(id, updates));\r\n            console.log(\"editing occurred\");\r\n        });*/\r\n    };\r\n};\r\n\r\n//SET_PROJECTS\r\n\r\nexport const setProjects = (projects) => ({\r\n    type: 'SET_PROJECTS',\r\n    projects\r\n});\r\n\r\nexport const startSetProjects = (projectData = {}) => {\r\n    return (dispatch) => {\r\n        return database.ref('projects').once('value').then((snapshot) => {\r\n            const projects = [];\r\n\r\n            //console.log(\"SETPROJECTS\", snapshot.val());\r\n            snapshot.forEach((childSnapshot)=>{\r\n                //console.log(\"CHILDSNAPSHOT\", childSnapshot.val());\r\n                projects.push({\r\n                    ...childSnapshot.val()\r\n                });\r\n            });\r\n\r\n            dispatch(setProjects(projects));\r\n        });\r\n    };\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { startRemoveProject } from '../actions/projects';\r\nimport { withRouter } from 'react-router';\r\nimport ProgressiveImage from 'react-progressive-image';\r\n\r\nconst ProjectListItem = ({ dispatch, id, description, title, images, history }) => (\r\n    <div className=\"project\" onClick={()=>{history.push('/projects/'.concat(id))}}>\r\n        <Link className=\"project__title\" to={'/projects/'.concat(id)}><h3>{title}</h3></Link>\r\n        <p>{description.substring(0,37)}...</p>\r\n\r\n        <ProgressiveImage src={images[0]} placeholder=\"/images/loader.gif\">\r\n            {(src, loading) => (\r\n                <img style={{ opacity: loading ? 0.2 : 1 }} src={src} alt=\"an image\" />\r\n            )}\r\n        </ProgressiveImage>\r\n        <br/>\r\n    </div>\r\n);\r\n\r\nexport default withRouter(connect()(ProjectListItem));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProjectListItem from './ProjectListItem';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst ProjectList = (props) => (\r\n    <div className=\"projectList_title\">\r\n        <h2>Project List</h2>\r\n        <div id=\"project-list\">\r\n            {props.projects.map((project) => {\r\n                return <ProjectListItem key={project.id}{...project}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"STATE \", state);\r\n    return {\r\n        projects: state.projects\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectList);","import React from 'react';\r\nimport ProjectList from './ProjectList';\r\n\r\nconst ProjectDashboardPage = () => (\r\n    <div>\r\n        <ProjectList />\r\n    </div>\r\n);\r\n\r\nexport default ProjectDashboardPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { startRemoveProject } from '../actions/projects';\r\nimport { withRouter } from 'react-router';\r\nimport ProgressiveImage from 'react-progressive-image';\r\n\r\nconst ProjectListItemAdmin = ({ dispatch, id, description, title, images, history }) => (\r\n    <div className=\"project\" onClick={()=>{history.push('/projects/'.concat(id))}}>\r\n        <div className=\"close-button\" onClick={(e)=>{\r\n            e.stopPropagation();\r\n            dispatch(startRemoveProject({id}));\r\n        }}>X</div>\r\n        <Link className=\"project__title\" to={'/projects/'.concat(id)}><h3>{title}</h3></Link>\r\n        <p>{description.substring(0,37)}...</p>\r\n\r\n        <ProgressiveImage src={images[0]} placeholder=\"/images/loader.gif\">\r\n            {(src, loading) => (\r\n                <img style={{ opacity: loading ? 0.2 : 1}} src={src} alt=\"an image\" />\r\n            )}\r\n        </ProgressiveImage>\r\n        <br/>\r\n        <button className=\"edit-button\" onClick={(e)=>{\r\n            e.stopPropagation();\r\n            history.push('/edit/'.concat(id));\r\n        }}>Edit\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default withRouter(connect()(ProjectListItemAdmin));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProjectListItemAdmin from './ProjectListItem-admin';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst ProjectListAdmin = (props) => (\r\n    <div className=\"projectList_title\">\r\n        <h2>Project List</h2>\r\n        <div id=\"project-list\">\r\n            {props.projects.map((project) => {\r\n                return <ProjectListItemAdmin key={project.id}{...project}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(\"STATE \", state);\r\n    return {\r\n        projects: state.projects\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProjectListAdmin);","import React from 'react';\r\nimport ProjectListAdmin from './ProjectList-admin';\r\n\r\nconst ProjectDashboardPageAdmin = () => (\r\n    <div>\r\n        <ProjectListAdmin />\r\n    </div>\r\n);\r\n\r\nexport default ProjectDashboardPageAdmin;","import React from 'react';\r\n\r\nexport default class ProjectForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.buttonTxt = props.project ? \"Update Project\" : \"Add Project\";\r\n        \r\n        this.state={\r\n            title: props.project ? props.project.title : '',\r\n            description: props.project ? props.project.description : '',\r\n            images: props.project ? props.project.images : null\r\n        };\r\n    }\r\n\r\n    onTitleChange = (e) =>{\r\n        const title = e.target.value;\r\n        this.setState(()=>({title}));\r\n    };\r\n    onDescriptionChange = (e) =>{\r\n        const description = e.target.value;\r\n        this.setState(()=>({description}));\r\n    };\r\n    onImageChange = (e) =>{\r\n        const images = e.target.files;\r\n        this.setState(()=>({images}));\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit({\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            images: this.state.images\r\n        });\r\n    };\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.onSubmit} encType='multipart/form-data'>\r\n                    <input type=\"text\" placeholder=\"Title\"\r\n                    autoFocus value={this.state.title} onChange={this.onTitleChange}/>\r\n                    <br/>\r\n                    <textarea type=\"text\" placeholder=\"Description\" rows=\"10\"\r\n                    value={this.state.description} onChange={this.onDescriptionChange}/>\r\n                    <br/>\r\n                    <input type=\"file\" onChange={this.onImageChange} multiple=\"multiple\"/>\r\n                    <br/>\r\n                    <button>{this.buttonTxt}</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProjectForm from './ProjectForm';\r\nimport { startAddProject } from '../actions/projects';\r\n\r\nconst AddProjectPage = (props) => (\r\n    <div className=\"addProject_input\">\r\n        <h2>Add Project</h2>\r\n        <ProjectForm onSubmit={(project) => {\r\n            props.dispatch(startAddProject(project));\r\n            props.history.push('/');\r\n        }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default connect()(AddProjectPage);","import React from 'react';\r\nimport ProjectForm from './ProjectForm';\r\nimport { connect } from 'react-redux';\r\nimport { startEditProject, addProject } from '../actions/projects';\r\n\r\nconst EditProjectPage = (props) => {\r\n    console.log(props);\r\n    //Editing project with id of {props.match.params.id}\r\n    return (\r\n        <div className=\"editProject_input\">\r\n            <h2>Edit Project</h2>\r\n            <ProjectForm \r\n                project = {props.project}\r\n                onSubmit = {\r\n                    (project) => {\r\n                        if(props.project.images === project.images){\r\n                            props.dispatch(startEditProject(props.match.params.id, project, false));\r\n                        } \r\n                        else{\r\n                            props.dispatch(startEditProject(props.match.params.id, project, true));\r\n                        }\r\n                        //props.dispatch(editProject(props.match.params.id, project));\r\n                        //console.log('edited project: ', project);\r\n                        props.history.push('/');\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return{\r\n        project: state.projects.find((project) => project.id === props.match.params.id)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditProjectPage);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => (\r\n    <div>\r\n        404! - <Link to=\"/\">Go home</Link>\r\n    </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport ProgressiveImage from 'react-progressive-image';\r\n\r\nconst ImageElement = (props) => (\r\n    <ProgressiveImage src={props.img} placeholder=\"/images/loader.gif\">\r\n        {(src, loading) => {\r\n            if(loading) \r\n                return <img style={{ opacity: 0.2, height:200, width: 200}} src={src} alt=\"an image\" />\r\n            else{\r\n                if(props.newStyle)\r\n                    return <img src={src} style={props.newStyle}></img>\r\n                else\r\n                    return <img src={src} style={{ maxWidth: '100%' }}></img>\r\n            }\r\n        }}\r\n    </ProgressiveImage>\r\n);\r\n\r\nexport default ImageElement;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport database from '../firebase/firebase';\r\nimport { storage } from '../firebase/firebase';\r\nimport ImageElement from './ImageElement';\r\nimport uuid from 'uuid';\r\n\r\nconst ViewProjectPage = (props) => {\r\n    //console.log(props);\r\n    //Viewing project with id of {props.match.params.id}\r\n    return (\r\n        <div className=\"viewProject\">\r\n            <h3 className=\"project__title\">{props.project.title}</h3>\r\n            <p>{props.project.description}</p>\r\n            <div className=\"ViewProject__imageGrid\">\r\n                {props.project.images.map((image) => {\r\n                    return <ImageElement key={uuid().toString()}img={image}/>\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        project: state.projects.find((project)=>{\r\n            return project.id === props.match.params.id;\r\n        })\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ViewProjectPage);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Mailto from 'react-protected-mailto';\r\nimport ImageElement from './ImageElement';\r\n\r\nconst ImgWrapper = styled.div`\r\n    display: block;\r\n    padding-top: 1em;\r\n    border-radius: 50%;\r\n    margin: auto;\r\n    text-align: center;\r\n`;\r\n\r\nconst H3Wrapper = styled.h3`\r\n    font-weight: 1000;\r\n    font-size: 1.2em;\r\n    text-align: center;\r\n    padding-top: 0.5em;\r\n    color: #333;\r\n`;\r\n\r\nconst PWrapper = styled.p`\r\n    max-width: 50em;\r\n    margin: auto;\r\n    padding-top: 0.5em;\r\n`;\r\n\r\nconst LabelWrapper = styled.p`\r\n    font-weight: 700;\r\n    text-align: center;\r\n    display: inline;\r\n`;\r\n\r\nconst CenterText = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n`;\r\n\r\nconst DivWrapper = styled.div`\r\n    padding-left: 0.5em;\r\n    padding-right: 0.5em;\r\n`;\r\n\r\nconst AboutPage = () => {\r\n    return (\r\n        <DivWrapper>\r\n            <ImgWrapper>\r\n                <ImageElement img=\"/images/profile.jfif\" newStyle={{ 'border-radius': '50%'}} />\r\n            </ImgWrapper>\r\n            <H3Wrapper>Mark Thomas - Software Developer</H3Wrapper>\r\n            <CenterText>\r\n                <div>\r\n                    <LabelWrapper>LinkedIn: </LabelWrapper>\r\n                    <a href=\"https://www.linkedin.com/in/mark-thomas-tech/\">https://www.linkedin.com/in/mark-thomas-tech/</a>\r\n                </div>\r\n                <div>\r\n                    <LabelWrapper>Email: </LabelWrapper>\r\n                    <Mailto\r\n                        email='mark.e.thomas.1997@gmail.com'\r\n                        headers={\r\n                        {subject:\"You're Hired!\"}\r\n                    }/>\r\n                </div>\r\n            </CenterText>\r\n\r\n            <PWrapper>\r\n            Software developer and recent Computer Science graduate with an interest in modern web development. Latest projects have involved React, Redux, NodeJS/Express, HTML5, CSS, JavaScript and MySQL. Notable works are discussed and shown in the projects section of LinkedIn. \r\n            </PWrapper>\r\n        </DivWrapper>\r\n    );\r\n};\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport auth from '../firebase/firebase';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/auth';\r\n\r\nconst Header = () => (\r\n    <header id=\"app-header\">\r\n        <div>\r\n            <a id=\"admin-button\" onClick={() => {\r\n                const password = prompt(\"Enter admin password for access:\");\r\n                    firebase.auth().signInWithEmailAndPassword(\"mark.e.thomas.1997@gmail.com\", password).catch(function(error) {\r\n                        // Handle Errors here.\r\n                        var errorCode = error.code;\r\n                        var errorMessage = error.message;\r\n                        if (errorCode === 'auth/wrong-password') {\r\n                            alert('Wrong password.');\r\n                        } else {\r\n                            alert(errorMessage);\r\n                        }\r\n                        //console.log(error);\r\n                      });\r\n                    firebase.auth().onAuthStateChanged(function(user) {\r\n                        if (user) {\r\n                            // User is signed in.\r\n                            var email = user.email;\r\n                            //console.log(\"USER EMAIL: \", email);\r\n                            window.location.reload();\r\n                            // ...\r\n                        } else {\r\n                            // User is signed out.\r\n                            // ...\r\n                        }\r\n                      });\r\n            }}><u>Admin</u></a>           \r\n            <h1>Portfolio</h1>\r\n            <NavLink to=\"/\" className=\"navlink\" activeClassName=\"is-active\" exact={true}><h3>Dashboard</h3></NavLink>\r\n            <NavLink to=\"/about\" className=\"navlink\" activeClassName=\"is-active\"><h3>About Me</h3></NavLink>\r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport auth from '../firebase/firebase';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/auth';\r\n\r\nconst HeaderAdmin = () => (\r\n    <header id=\"app-header\">\r\n        <div>\r\n            <a id=\"admin-button\" onClick={() => {\r\n                firebase.auth().signOut();   \r\n                window.location.reload();         \r\n            }}><u>Sign out</u></a>           \r\n            <h1>Portfolio</h1>\r\n            <NavLink to=\"/\" className=\"navlink\" activeClassName=\"is-active\" exact={true}><h3>Dashboard</h3></NavLink>\r\n            <NavLink to=\"/about\" className=\"navlink\" activeClassName=\"is-active\"><h3>About Me</h3></NavLink>\r\n            <NavLink to=\"/create\" className=\"navlink\" activeClassName=\"is-active\"><h3>Create Project</h3></NavLink>       \r\n        </div>\r\n    </header>\r\n);\r\n\r\nexport default HeaderAdmin;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Link, NavLink } from 'react-router-dom';\r\nimport ProjectDashboardPage from '../components/ProjectDashboardPage';\r\nimport ProjectDashboardPageAdmin from '../components/ProjectDashboardPage-admin';\r\nimport AddProjectPage from '../components/AddProjectPage';\r\nimport EditProjectPage from '../components/EditProjectPage';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport ViewProjectPage from '../components/ViewProjectPage';\r\nimport AboutPage from '../components/AboutPage';\r\nimport Header from '../components/Header';\r\nimport HeaderAdmin from '../components/Header-admin';\r\n\r\nimport { firebase } from '../firebase/firebase';\r\n\r\nconst AppRouter = () => {\r\n    if(firebase.auth().currentUser){\r\n        //console.log(\"uid\",firebase.auth().currentUser.uid);\r\n        return (<BrowserRouter>\r\n            <div id=\"app-box\">\r\n                <HeaderAdmin />\r\n                <Switch>\r\n                    <Route path=\"/\" component={ProjectDashboardPageAdmin} exact={true} />\r\n                    <Route path=\"/create\" component={AddProjectPage} />\r\n                    <Route path=\"/projects/:id\" component={ViewProjectPage} /> \r\n                    <Route path=\"/edit/:id\" component={EditProjectPage} />\r\n                    <Route path=\"/about\" component={AboutPage} />\r\n                    <Route component={NotFoundPage}/>\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>);\r\n    } else{\r\n        return (<BrowserRouter>\r\n            <div id=\"app-box\">\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" component={ProjectDashboardPage} exact={true} />\r\n                    <Route path=\"/projects/:id\" component={ViewProjectPage} /> \r\n                    <Route path=\"/about\" component={AboutPage} />\r\n                    <Route component={NotFoundPage} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>);\r\n    }\r\n};\r\n\r\nexport default AppRouter;","//projects reducer\r\n\r\nconst projectsReducerDefaultState = [];\r\n\r\nconst projectsReducer = (state = projectsReducerDefaultState, action) => {\r\n    switch(action.type){\r\n        case 'ADD_PROJECT': \r\n            return [\r\n                ...state,\r\n                action.project\r\n            ];\r\n        case 'REMOVE_PROJECT':\r\n            return state.filter(({ id }) => action.id !== id);\r\n        case 'EDIT_PROJECT':\r\n            return state.map((project)=>{\r\n                return project.id === action.id ?\r\n                    {\r\n                        ...project,\r\n                        ...action.updates\r\n                    }\r\n                    : project;\r\n            });\r\n        case 'SET_PROJECTS':\r\n            return action.projects\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectsReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport projectsReducer from '../reducers/projects';\r\nimport thunk from 'redux-thunk';\r\n\r\n//store creation\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            projects: projectsReducer,\r\n        }),\r\n        composeEnhancers(applyMiddleware(thunk))\r\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    \r\n    return store;\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './routers/AppRouter';\nimport configureStore from './store/configureStore';\nimport { startSetProjects } from './actions/projects'\nimport './firebase/firebase';\n\nconst store = configureStore();\n\n// store.dispatch(addProject({ title: 'Project 1', description: 'this is the first project'}));\n// store.dispatch(addProject({ title: 'Project 2', description: 'this is the two project' }));\n\nconst state = store.getState();\n\n//console.log(store.getState());\n\nexport default class App extends React.Component {\n    render(){\n        return (\n            <Provider store={store}>\n                <AppRouter />  \n            </Provider>\n        );\n    }\n}\n\nReactDOM.render(<p>Loading...</p>, document.getElementById('root'));\n\nstore.dispatch(startSetProjects()).then(() => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n});\n\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}